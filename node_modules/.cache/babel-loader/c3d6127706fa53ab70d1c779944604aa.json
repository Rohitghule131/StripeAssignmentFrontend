{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./State\";\nimport * as action from \"./Actions\";\nconst productReducer = createSlice({\n  name: \"productReducer\",\n  initialState: initialState,\n  reducers: {\n    countIncrementHandler: state => {\n      if (state.count <= 2) {\n        state.count += 1;\n        state.price = state.price * state.count;\n      }\n    },\n    countDecrementHandler: state => {\n      if (state.count >= 2) {\n        state.count -= 1;\n        state.price = state.price * state.count;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(action.Get_Product.fulfilled, (state, payload) => {\n      state.product = payload.payload;\n      state.productFetch = true;\n    });\n    builder.addCase(action.Get_Product.rejected, state => {\n      state.error = true;\n    });\n  }\n});\nexport default productReducer.reducer;\nexport const {\n  countIncrementHandler,\n  countDecrementHandler\n} = productReducer.actions;","map":{"version":3,"names":["createSlice","initialState","action","productReducer","name","reducers","countIncrementHandler","state","count","price","countDecrementHandler","extraReducers","builder","addCase","Get_Product","fulfilled","payload","product","productFetch","rejected","error","reducer","actions"],"sources":["/home/mindbowser/stripeassginment/stripefrontend/src/services/redux/Reducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./State\";\nimport * as action from \"./Actions\"\n\nconst productReducer = createSlice({\n    name:\"productReducer\",\n    initialState:initialState,\n    reducers:{\n        countIncrementHandler:(state)=>{\n            if(state.count<=2){\n                state.count += 1\n                state.price = state.price * state.count\n            }\n        },\n        countDecrementHandler:(state)=>{\n            if(state.count>=2){\n                state.count -= 1\n                state.price = state.price * state.count\n            }\n        }\n    },\n    extraReducers:(builder)=>{\n        builder.addCase(action.Get_Product.fulfilled,(state,payload)=>{\n            state.product = payload.payload\n            state.productFetch = true\n        })\n        builder.addCase(action.Get_Product.rejected,(state)=>{\n            state.error = true\n        })\n    }\n})\n\nexport default productReducer.reducer\nexport const {countIncrementHandler, countDecrementHandler} = productReducer.actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AAEA,MAAMC,cAAc,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAC,gBAD0B;EAE/BH,YAAY,EAACA,YAFkB;EAG/BI,QAAQ,EAAC;IACLC,qBAAqB,EAAEC,KAAD,IAAS;MAC3B,IAAGA,KAAK,CAACC,KAAN,IAAa,CAAhB,EAAkB;QACdD,KAAK,CAACC,KAAN,IAAe,CAAf;QACAD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACC,KAAlC;MACH;IACJ,CANI;IAOLE,qBAAqB,EAAEH,KAAD,IAAS;MAC3B,IAAGA,KAAK,CAACC,KAAN,IAAa,CAAhB,EAAkB;QACdD,KAAK,CAACC,KAAN,IAAe,CAAf;QACAD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACC,KAAlC;MACH;IACJ;EAZI,CAHsB;EAiB/BG,aAAa,EAAEC,OAAD,IAAW;IACrBA,OAAO,CAACC,OAAR,CAAgBX,MAAM,CAACY,WAAP,CAAmBC,SAAnC,EAA6C,CAACR,KAAD,EAAOS,OAAP,KAAiB;MAC1DT,KAAK,CAACU,OAAN,GAAgBD,OAAO,CAACA,OAAxB;MACAT,KAAK,CAACW,YAAN,GAAqB,IAArB;IACH,CAHD;IAIAN,OAAO,CAACC,OAAR,CAAgBX,MAAM,CAACY,WAAP,CAAmBK,QAAnC,EAA6CZ,KAAD,IAAS;MACjDA,KAAK,CAACa,KAAN,GAAc,IAAd;IACH,CAFD;EAGH;AAzB8B,CAAD,CAAlC;AA4BA,eAAejB,cAAc,CAACkB,OAA9B;AACA,OAAO,MAAM;EAACf,qBAAD;EAAwBI;AAAxB,IAAiDP,cAAc,CAACmB,OAAtE"},"metadata":{},"sourceType":"module"}