{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./State\";\nimport * as action from \"./Actions\";\nconst productReducer = createSlice({\n  name: \"productReducer\",\n  initialState: initialState,\n  extraReducers: builder => {\n    builder.addCase(action.Get_Product.fulfilled, (state, payload) => {\n      state.product = payload.payload;\n      state.productFetch = true;\n    }), builder.addCase(action.Get_Product.rejected, state => {\n      state.error = true;\n    });\n  }\n});\nexport default productReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","action","productReducer","name","extraReducers","builder","addCase","Get_Product","fulfilled","state","payload","product","productFetch","rejected","error","reducer"],"sources":["/home/mindbowser/stripeassginment/stripefrontend/src/services/redux/Reducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./State\";\nimport * as action from \"./Actions\"\n\nconst productReducer = createSlice({\n    name:\"productReducer\",\n    initialState:initialState,\n    extraReducers:(builder)=>{\n        builder.addCase(action.Get_Product.fulfilled,(state,payload)=>{\n            state.product = payload.payload\n            state.productFetch = true\n        }),\n        builder.addCase(action.Get_Product.rejected,(state)=>{\n            state.error = true\n        })\n    }\n})\n\nexport default productReducer.reducer\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AAEA,MAAMC,cAAc,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAC,gBAD0B;EAE/BH,YAAY,EAACA,YAFkB;EAG/BI,aAAa,EAAEC,OAAD,IAAW;IACrBA,OAAO,CAACC,OAAR,CAAgBL,MAAM,CAACM,WAAP,CAAmBC,SAAnC,EAA6C,CAACC,KAAD,EAAOC,OAAP,KAAiB;MAC1DD,KAAK,CAACE,OAAN,GAAgBD,OAAO,CAACA,OAAxB;MACAD,KAAK,CAACG,YAAN,GAAqB,IAArB;IACH,CAHD,GAIAP,OAAO,CAACC,OAAR,CAAgBL,MAAM,CAACM,WAAP,CAAmBM,QAAnC,EAA6CJ,KAAD,IAAS;MACjDA,KAAK,CAACK,KAAN,GAAc,IAAd;IACH,CAFD,CAJA;EAOH;AAX8B,CAAD,CAAlC;AAcA,eAAeZ,cAAc,CAACa,OAA9B"},"metadata":{},"sourceType":"module"}